<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
		"-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"
		"http://struts.apache.org/dtds/struts-2.1.dtd">
<struts>
	<constant name="struts.devMode" value="true" />

	<package name="default" extends="tiles-default">
		<interceptors>
			<interceptor name="loginInterceptor"
				class="de.nak.studentsdatabase.interceptors.LoginInterceptor"></interceptor>
			<interceptor-stack name="loginStack">
				<interceptor-ref name="loginInterceptor"></interceptor-ref>
				<interceptor-ref name="defaultStack"></interceptor-ref>
			</interceptor-stack>
		</interceptors>

		<!-- Action that shows the welcome screen. -->
		<action name="ShowWelcomeView"
			class="de.nak.studentsdatabase.action.ShowWelcomeViewAction" method="execute">
			<interceptor-ref name="loginStack" />
			<result name="login">login.jsp</result>
			<result name="success" type="tiles">welcomeView</result>
		</action>

		<!-- Action that displays the list of applicants. -->
		<action name="ShowApplicantList"
			class="de.nak.studentsdatabase.action.ShowApplicantListAction"
			method="execute">
			<result type="tiles">applicantList</result>
		</action>

		<!-- Shows the empty applicantForm. -->
		<action name="NewApplicant">
			<result type="tiles">applicantForm</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="SaveApplicant"
			class="de.nak.studentsdatabase.action.SaveApplicantAction" method="execute">
			<result type="redirect">ShowApplicantList.action</result>
			<result type="tiles" name="input">applicantForm</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="EditApplicant"
			class="de.nak.studentsdatabase.action.EditApplicantAction" method="execute">
			<result type="tiles">applicantForm</result>
			<result type="chain" name="input">ShowApplicantsList</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="DeleteApplicant"
			class="de.nak.studentsdatabase.action.DeleteApplicantAction" method="execute">
			<result type="redirect">ShowApplicantList.action</result>
			<result type="chain" name="input">ShowApplicantList</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelApplicant"
			class="de.nak.studentsdatabase.action.CancelApplicantAction" method="execute">
			<result type="redirect">ShowApplicantList.action</result>
		</action>

		<!-- Action that displays the list of applicants. -->
		<action name="ShowStudentList"
			class="de.nak.studentsdatabase.action.ShowStudentListAction" method="execute">
			<result type="tiles">studentList</result>
		</action>

		<!-- Shows the view for searching applicant for student. -->
		<action name="NewStudent" class="de.nak.studentsdatabase.action.NewStudentAction"
			method="execute">
			<result type="tiles">studentForm</result>
		</action>

		<action name="NewStudentByApplicant"
			class="de.nak.studentsdatabase.action.NewStudentByApplicantAction"
			method="execute">
			<result type="chain" name="input">newStudentByApplicantForm</result>
			<result type="tiles">studentForm</result>
		</action>

		<action name="SaveStudent" class="de.nak.studentsdatabase.action.SaveStudentAction"
			method="execute">
			<result type="redirect">ShowStudentList.action</result>
			<result type="tiles" name="input">studentForm</result>
		</action>

		<action name="isNewStudentApplicant"
			class="de.nak.studentsdatabase.action.IsNewStudentApplicantAction"
			method="execute">
			<result type="tiles">newStudentByApplicantForm</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="EditStudent" class="de.nak.studentsdatabase.action.EditStudentAction">
			<result type="chain" name="input">ShowStudentList</result>
			<result type="tiles">studentForm</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="SearchStudent"
			class="de.nak.studentsdatabase.action.SearchStudentAction" method="execute">
			<result type="tiles">studentList</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="ShowSearchStudentView">
			<result type="tiles">searchStudentForm</result>
		</action>

		<!-- Action that displays a list of students for attendanceList -->
		<action name="GenerateAttendanceList"
			class="de.nak.studentsdatabase.action.GenerateAttendanceListAction"
			method="execute">
			<result type="tiles">attendanceList</result>
		</action>

		<!-- Action that displays a list of results for resultList -->
		<action name="GenerateResultsList"
			class="de.nak.studentsdatabase.action.GenerateResultsListAction"
			method="execute">
			<result type="tiles">resultsList</result>
		</action>

		<!-- Action that displays welcomeView after successful login. -->
		<action name="Login" class="de.nak.studentsdatabase.action.LogInAction"
			method="login">
			<interceptor-ref name="defaultStack"></interceptor-ref>
			<result type="redirect">ShowWelcomeView.action</result>
			<result name="login">login.jsp</result>
		</action>
		<!-- Action for logging out an user. -->
		<action name="Logout" class="de.nak.studentsdatabase.action.LogInAction"
			method="logout">
			<result name="login">login.jsp</result>
		</action>

		<!-- Shows the empty UserForm. -->
		<action name="NewUser">
			<result type="tiles">userForm</result>
		</action>

		<!-- Action for save an user. -->
		<action name="SaveUser" class="de.nak.studentsdatabase.action.SaveUserAction"
			method="execute">
			<result type="redirect">ShowWelcomeView.action</result>
			<result type="tiles" name="input">userForm</result>
		</action>

		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelUser" class="de.nak.studentsdatabase.action.CancelUserAction"
			method="execute">
			<result type="redirect">ShowWelcomeView.action</result>
		</action>

		<!-- Action that shows the tables screen. -->
		<action name="ShowTablesList"
			class="de.nak.studentsdatabase.action.ShowTablesListAction" method="execute">
			<interceptor-ref name="loginStack" />
			<result name="login">login.jsp</result>
			<result name="success" type="tiles">tablesList</result>
		</action>

		<!-- Loads an existing contact and shows it in the contact form. -->
		<action name="EditContact" class="de.nak.studentsdatabase.action.ContactAction"
			method="load">
			<result type="tiles">contactForm</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Shows the empty form for a new contact. -->
		<action name="AddContact">
			<result type="tiles">contactForm</result>
		</action>
		<!-- Deletes the selected contact and shows the tables list again. -->
		<action name="DeleteContact" class="de.nak.studentsdatabase.action.ContactAction"
			method="delete">
			<result type="redirect">ShowTablesList.action</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelContact" class="de.nak.studentsdatabase.action.ContactAction"
			method="cancel">
			<result type="redirect">ShowTablesList.action</result>
		</action>
		<!-- Saves the new or updated contact into the database and shows the tables 
			list again. -->
		<action name="SaveContact" class="de.nak.studentsdatabase.action.ContactAction"
			method="save">
			<result type="redirect">ShowTablesList.action</result>
			<result type="tiles" name="input">contactForm</result>
		</action>

		<!-- Loads an existing company and shows it in the company form. -->
		<action name="EditCompany" class="de.nak.studentsdatabase.action.CompanyAction"
			method="load">
			<result type="tiles">companyForm</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Shows the empty form for a new company. -->
		<action name="AddCompany">
			<result type="tiles">companyForm</result>
		</action>
		<!-- Deletes the selected company and shows the tables list again. -->
		<action name="DeleteCompany" class="de.nak.studentsdatabase.action.CompanyAction"
			method="delete">
			<result type="redirect">ShowTablesList.action</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelCompany" class="de.nak.studentsdatabase.action.CompanyAction"
			method="cancel">
			<result type="redirect">ShowTablesList.action</result>
		</action>
		<!-- Saves the new or updated company into the database and shows the tables 
			list again. -->
		<action name="SaveCompany" class="de.nak.studentsdatabase.action.CompanyAction"
			method="save">
			<result type="redirect">ShowTablesList.action</result>
			<result type="tiles" name="input">companyForm</result>
		</action>
		
		<!-- Loads an existing exam and shows it in the exam form. -->
		<action name="EditExam" class="de.nak.studentsdatabase.action.ExamAction"
			method="load">
			<result type="tiles">examForm</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Shows the empty form for a new exam. -->
		<action name="AddExam">
			<result type="tiles">examForm</result>
		</action>
		<!-- Deletes the selected exam and shows the tables list again. -->
		<action name="DeleteExam" class="de.nak.studentsdatabase.action.ExamAction"
			method="delete">
			<result type="redirect">ShowTablesList.action</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelExam" class="de.nak.studentsdatabase.action.ExamAction"
			method="cancel">
			<result type="redirect">ShowTablesList.action</result>
		</action>
		<!-- Saves the new or updated exam into the database and shows the tables list 
			again. -->
		<action name="SaveExam" class="de.nak.studentsdatabase.action.ExamAction"
			method="save">
			<result type="redirect">ShowTablesList.action</result>
			<result type="tiles" name="input">examForm</result>
		</action>
		
		<!-- Loads an existing manipel and shows it in the manipel form. -->
		<action name="EditManipel" class="de.nak.studentsdatabase.action.ManipelAction"
			method="load">
			<result type="tiles">manipelForm</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Shows the empty form for a new manipel. -->
		<action name="AddManipel">
			<result type="tiles">ManipelForm</result>
		</action>
		<!-- Deletes the selected manipel and shows the tables list again. -->
		<action name="DeleteManipel" class="de.nak.studentsdatabase.action.ManipelAction"
			method="delete">
			<result type="redirect">ShowTablesList.action</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelManipel" class="de.nak.studentsdatabase.action.ManipelAction"
			method="cancel">
			<result type="redirect">ShowTablesList.action</result>
		</action>
		<!-- Saves the new or updated manipel into the database and shows the tables list 
			again. -->
		<action name="SaveManipel" class="de.nak.studentsdatabase.action.ManipelAction"
			method="save">
			<result type="redirect">ShowTablesList.action</result>
			<result type="tiles" name="input">manipelForm</result>
		</action>
		
		<!-- Loads a existing zenturie and shows it in the zenturie form. -->
		<action name="EditZenturie" class="de.nak.studentsdatabase.action.ZenturieAction"
			method="load">
			<result type="tiles">zenturieForm</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Shows the empty form for a new zenturie. -->
		<action name="AddZenturie">
			<result type="tiles">zenturieForm</result>
		</action>
		<!-- Deletes the selected zenturie and shows the tables list again. -->
		<action name="DeleteZenturie" class="de.nak.studentsdatabase.action.ZenturieAction"
			method="delete">
			<result type="redirect">ShowTablesList.action</result>
			<result type="chain" name="input">ShowTablesList</result>
		</action>
		<!-- Action for the cancel button. Is required to avoid stack traces in 
			log. -->
		<action name="CancelZenturie" class="de.nak.studentsdatabase.action.ZenturieAction"
			method="cancel">
			<result type="redirect">ShowTablesList.action</result>
		</action>
		<!-- Saves the new or updated zenturie into the database and shows the tables list 
			again. -->
		<action name="SaveZenturie" class="de.nak.studentsdatabase.action.ZenturieAction"
			method="save">
			<result type="redirect">ShowTablesList.action</result>
			<result type="tiles" name="input">zenturieForm</result>
		</action>
	</package>
</struts>
